<?php

namespace App\Http\Controllers\Stock;

use App\Http\Controllers\BaseController;
use App\Http\Requests\Stock\IndexStockGenerateRequest;
use App\Http\Resources\Stock\StockExportResources;
use App\Http\Resources\Stock\StockGenerateResources;
use App\Http\Response\Facades\ResponseTemplate;
use App\Models\Stock\StockGenerate;
use App\Services\Auth\Facades\AuthService;
use Illuminate\Auth\AuthenticationException;
use AIGenerate\Services\Stock\Contracts\StockGenerateServiceContract;

class StockGenerateController extends BaseController
{
    public function __construct(private readonly StockGenerateServiceContract $service)
    {
        $this->middleware('auth:api')->only('getImageUrl');
    }

    /**
     * 유저가 stock generate 한 모든 결과물을 리스트를 제공 합니다.
     * @OA\Get(
     *     path="/api/stock/generate",
     *     summary="provides a list of all stock results generated by the user",
     *     tags={"stock"},
     *     @OA\Parameter(
     *         description="page",
     *         in="query",
     *         name="page",
     *         required=false,
     *         @OA\Schema(type="integer"),
     *         @OA\Examples(example="1", value="1", summary="1"),
     *         @OA\Examples(example="2", value="2", summary="2"),
     *     ),
     *     @OA\Response(
     *         response=200,
     *         description="OK",
     *          @OA\JsonContent(
     *              type="object",
     *               @OA\Property(
     *                 property="message",
     *                 type="string",
     *                 example="A simple of response message",
     *              ),
     *               @OA\Property(
     *                 property="data",
     *                 type="object",
     *                 ref="#/components/schemas/StockGenerateResources",
     *              ),
     *             ),
     *         ),
     *      ),
     * )
     *
     * @throws \Throwable
     */
    public function index(IndexStockGenerateRequest $request)
    {
        $validated = $request->validated();
        return $this->run(function () use ($validated) {
            $generate = $this->service->index(AuthService::currentUser(), $validated);
            $generate->setCollection($generate->transform(fn($item) => new StockGenerateResources($item)));
            return ResponseTemplate::toJson($generate);
        });
    }

    /**
     * stock generate 된 결과물의 image url 제공
     * @OA\Get(
     *     path="/api/stock/generate/{stockGenerate}/export",
     *     summary="Provides image URL of stock generated results",
     *     tags={"stock"},
     *     @OA\Parameter(
     *         in="path",
     *         name="stockGenerate",
     *         description="stockGenerate id",
     *         required=true,
     *         @OA\Schema(type="integer"),
     *         @OA\Examples(example="1", value="1", summary="1"),
     *         @OA\Examples(example="2", value="2", summary="2"),
     *     ),
     *     @OA\Response(
     *         response=200,
     *         description="OK",
     *          @OA\JsonContent(
     *              type="object",
     *               @OA\Property(
     *                 property="message",
     *                 type="string",
     *                 example="A simple of response message",
     *              ),
     *          @OA\Property(
     *                  property="data",
     *                  type="object",
     *                  ref="#/components/schemas/StockExportResources",
     *               ),
     *             ),
     *         ),
     *      ),
     * )
     *
     * @throws \Throwable
     */
    public function exportImageUrl(StockGenerate $stockGenerate)
    {
        return $this->run(function () use ($stockGenerate) {
            throw_if($stockGenerate->user_id !== AuthService::currentUser()->getKey(),
                AuthenticationException::class, 'You do not have permission to this result.');
            $export = $this->service->storeExport($stockGenerate);
            $export->imageUrl = $stockGenerate->images->first()->getOriginalTemporaryUrl();
            return ResponseTemplate::toJson(new StockExportResources($export));
        });
    }
}
